#!/bin/bash

version=1.0

# Default values:
# -1 is "do not modify window"
x_offset=-1
y_offset=-1
height=-1
width=-1
borderless=

# Colors
no_color='\033[0m'
prompt_color='\033[0m'
num_color='\033[0;34m'
entry_color='\033[1;37m'

# Supress main menu sometimes
supress=

# Used to filter output from wmctrl.
hostname=$(hostname) 

AppHeader()
{
echo -e "
____  ___         .__                 .__                         
\   \/  /__  _  __|__|  ____    ______|__|________  ____ _______  
 \     / \ \/ \/ /|  | /    \  /  ___/|  |\___   /_/ __ \\_  __ \ 
 /     \  \     / |  ||   |  \ \___ \ |  | /    / \  ___/ |  | \/ 
/___/\  \  \/\_/  |__||___|  //____  >|__|/_____ \ \___  >|__|    
      \_/                  \/      \/           \/     \/         
=================================================================\n"
}

AppHelp()
{
	clear
	AppHeader

	echo "Help"
	echo "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"
	echo " Enter the number that corresponds to the window you would like to modify."
	echo " <control>+C or Q to quit"
	echo " R to refresh the window list"
	echo " O for options"
	echo
	echo "Command Line Options: "
	echo "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"
	CmdHelp
	echo
	echo -n "Press R to go back O for options or Q to quit:"
	GetInput
}

CmdHelp()
{
   # Display Help
   echo "xwinsizer: Take control of your windows. version ${version}"
   echo
   echo "Syntax: xwinsizer <window_id> [-b | --borderless] [-w | --width] [-h | --height] [-x | --xoffset] [-y | --yoffset]"
   echo "options:"
   echo " -b | --borderless	Make the Window Borderless"
   echo " -h | --height		Set the width of the window"
   echo " -w | --width		Set the height of the window"
   echo " -x | --xoffset		x offset from the left of screen"
   echo " -y | --yoffset		Y offset from the top of screen"
   echo " -l | --list		Dispaly a static list of windows along with their ids"
   echo " --help			Dispaly this screen" 
   echo
}

OptionsMenu()
{
	clear
	AppHeader
	echo "Options"
	echo "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"

	echo -e " ${num_color}1)${entry_color} Borderless:${no_color} ${borderless}"
	echo "    Default:"
	echo

	echo -e " ${num_color}2)${entry_color} Width:${no_color} ${width}"
	echo "    Default: -1"
	echo

	echo -e " ${num_color}3)${entry_color} Height:${no_color} ${height}"
	echo "    Default: -1"
	echo

	echo -e " ${num_color}4)${entry_color} X Position:${no_color} ${x_offset}"
	echo "    Default: -1"
	echo

	echo -e " ${num_color}5)${entry_color} Y Position:${no_color}${y_offset}"
	echo "    Default: -1"
	echo

	echo -n "Enter selection or press r to return:"
	read user_input

	if [ "$user_input" = '1' ] ; then
		echo -n "Enter New Value for Borderless (empty for false):"
		read new_value
		borderless="$new_value"
	elif [ "$user_input" = '2' ]; then
		echo -n "Enter New Value for Width:"
		read new_vale
		width="$new_value"
	elif [ "$user_input" = '3' ]; then
		echo -n "Enter New Value for Height:"
		read new_value
		height="$new_value"
	elif [ "$user_input" = '4' ]; then
		echo -n "Enter New Value for X:"
		read new_value
		x_offset="$new_value"
	elif [ "$user_input" = '5' ]; then
		echo -n "Enter New Value for Y:"
		read new_value
		y_offset="$new_value"
	elif [ "$user_input" = 'r' ] || [ "$user_ipnut" = 'R' ]; then
		AppHeader
		WindowList
	elif [ "$user_input" = 'q' ] || [ "$user_ipnut" = 'Q' ]; then
		exit 0
	fi

	OptionsMenu
}

GetInput()
{
	read user_input

	if [ "$user_input" = 'r' ] || [ "$user_input" = 'R' ]; then
		WindowList
	elif [ "$user_input" = 'h' ] || [  "$user_input" = 'H' ]; then
		AppHelp
	elif [ "$user_input" = 'o' ] || [ "$user_input" = 'O' ]; then
		OptionsMenu
	elif [ "$user_input" = 'q' ] || [ "$user_input" = 'Q' ]; then
		exit 0
	else
		user_input=$(($user_input - 1))
		IFS=$' ' handle=(${windows[$user_input]})

		if [ "$borderless" ]; then
			xprop -id ${handle} -format _MOTIF_WM_HINTS 32c -set _MOTIF_WM_HINTS 2
		fi

		wmctrl -i -r ${handle} -e 0,${x_offset},${y_offset},${width},${height}
	fi
}

WindowList()
{
	clear
	AppHeader
	echo -e "${prompt_color}O for options, H for help, R to refresh list ${no_color}"
	echo

	#Get window list from wmctrl
	IFS=$'\n' windows=( $(wmctrl -l) )

	i=0
	for win in "${windows[@]}"; do
		win_name=${win##*${hostname}}
		win_name=${win_name##*N/A}

		if [ ! "$win_name" ]; then
			win_name=" <No title>"
		fi

		i=$((i+1));
		echo -e "${num_color}${i}) ${entry_color}${win_name}${no_color}"
	done
	echo

	echo -ne "${prompt_color}Make Selection:${no_color}"

	GetInput
}

args=$(getopt -a -n xwinsizer -o lbw:h:x:y: --long "help",list,borderless,width:,height:,xoffset:,yoffset: -- "$@")
valid_args=$?
if [ "$valid_args" != "0" ]; then
	CmdHelp
	supress=true
fi

eval set -- "$args"
while :
do
	case "$1" in 
		--help ) 
			CmdHelp;
			supress=true;
		       	shift;;
		-l | --list ) 
			echo -e "id | dt | host | title"; 
			echo -e "$(wmctrl -l)"; 
			supress=true;
			shift;;
		-b | --borderless) 
			borderless=true;
			shift;;
		-w | --width) 
			width="$2"; 
			shift 2;;
		-h | --height) 
			height="$2"; 
			shift 2;;
		-x | --xoffset) 
			x_offset=$2; 
			shift 2;;
		-y | --yoffset) 
			y_offset=$2; 
			shift 2;;
		--) 
			shift; 
			break;;
		*) 
			echo 'invalid opts';;
	esac
done

if [ "$1" ]; then
	if [ "$borderless" ]; then
		xprop -id "${1}" -format _MOTIF_WM_HINTS 32c -set _MOTIF_WM_HINTS 2
	fi

	wmctrl -i -r "${1}" -e 0,"${x_offset}","${y_offset}","${width}","${height}"
else
	if [ ! "$supress" ]; then
		WindowList
	fi
fi

